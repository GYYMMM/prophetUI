# Generated by Django 3.0.4 on 2020-04-04 18:14

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import prophetcore.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('mobile', models.CharField(blank=True, max_length=16, verbose_name='手机号码')),
                ('avatar', models.ImageField(default='avatar/default.png', upload_to='avatar/%Y/%m/%d', verbose_name='头像')),
                ('settings', models.TextField(blank=True, help_text='user settings use json format', verbose_name='settings')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Idc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.CharField(help_text='先知节点简称,尽量简洁。例如：XA01', max_length=16, unique=True, verbose_name='先知节点简称')),
                ('desc', models.CharField(help_text='请填写定义的先知节点全称。例如：xxx机房', max_length=64, unique=True, verbose_name='先知节点全称')),
                ('codename', models.SlugField(blank=True, help_text='先知节点代码，用于编号前缀', null=True, verbose_name='先知节点代码')),
                ('emailgroup', models.EmailField(blank=True, help_text='该先知节点的邮箱组', max_length=32, null=True, verbose_name='邮箱组')),
                ('address', models.CharField(help_text='先知节点的具体地址', max_length=64, unique=True, verbose_name='先知节点地址')),
                ('duty', models.CharField(blank=True, default='7*24', help_text='先知节点值班类型,例如:5*8', max_length=16, null=True, verbose_name='值班类型')),
                ('tel', models.CharField(help_text='联系方式，例如：13800138000', max_length=32, verbose_name='值班电话')),
                ('settings', models.TextField(blank=True, help_text='data center extended settings use json format', verbose_name='settings')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_idc_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('managers', models.ManyToManyField(blank=True, help_text='权限将比普通用户多一些', to=settings.AUTH_USER_MODEL, verbose_name='管理人员')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_idc_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
            options={
                'verbose_name': '先知节点',
                'verbose_name_plural': '先知节点',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Syslog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object id')),
                ('content', models.TextField(blank=True, verbose_name='详细内容')),
                ('action_flag', models.CharField(max_length=32, verbose_name='action flag')),
                ('message', models.TextField(blank=True, verbose_name='change message')),
                ('object_desc', models.CharField(max_length=128, verbose_name='对象描述')),
                ('related_client', models.CharField(blank=True, max_length=128, null=True, verbose_name='关系客户')),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to={'app_label': 'prophetcore'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_syslog_content_type', to='contenttypes.ContentType', verbose_name='content type')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_syslog_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该资源所属的节点', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_syslog_onidc', to='prophetcore.Idc', verbose_name='所属节点')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_syslog_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
            options={
                'verbose_name': 'log entries',
                'verbose_name_plural': 'log entries',
                'ordering': ['-created'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('flag', models.SlugField(choices=[('', '---------')], help_text='该对象的标记类型,比如：设备类型', max_length=64, verbose_name='标记类型')),
                ('text', models.CharField(help_text='记录内容,模板中显示的内容', max_length=64, verbose_name='显示内容')),
                ('description', models.CharField(blank=True, help_text='记录内容的帮助信息/说明/注释', max_length=128, verbose_name='记录说明')),
                ('color', models.SlugField(blank=True, choices=[('red', '红色'), ('orange', '橙色'), ('yellow', '黄色'), ('green', '深绿色'), ('blue', '蓝色'), ('muted', '灰色'), ('black', '黑色'), ('aqua', '浅绿色'), ('gray', '浅灰色'), ('navy', '海军蓝'), ('teal', '水鸭色'), ('olive', '橄榄绿'), ('lime', '高亮绿'), ('fuchsia', '紫红色'), ('purple', '紫色'), ('maroon', '褐红色'), ('white', '白色'), ('light-blue', '暗蓝色')], help_text='该标签使用的颜色, 用于报表统计以及页面区分', max_length=12, null=True, verbose_name='颜色')),
                ('master', models.NullBooleanField(default=False, help_text='用于默认选中,比如:默认使用的设备类型是 服务器', verbose_name='默认使用')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_option_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该资源所属的节点', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_option_onidc', to='prophetcore.Idc', verbose_name='所属节点')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_option_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('parent', models.ForeignKey(blank=True, help_text='该对象的上一级关联对象', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_option_parent', to='prophetcore.Option', verbose_name='父级对象')),
            ],
            options={
                'verbose_name': '节点选项',
                'verbose_name_plural': '节点选项',
                'ordering': ['-actived', '-modified'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
                'unique_together': {('flag', 'text')},
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('title', models.CharField(max_length=128, verbose_name='文档标题')),
                ('body', models.TextField(verbose_name='文档内容')),
                ('category', models.ForeignKey(blank=True, help_text='分类, 从选项中选取', limit_choices_to={'flag': 'Document-Category'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_document_category', to='prophetcore.Option', verbose_name='文档分类')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_document_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该资源所属的节点', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_document_onidc', to='prophetcore.Idc', verbose_name='所属节点')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_document_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('status', models.ForeignKey(blank=True, help_text='从选项中选取', limit_choices_to={'flag': 'Document-Status'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_document_status', to='prophetcore.Option', verbose_name='文档状态')),
                ('tags', models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自选项', limit_choices_to={'flag': 'Document-Tags'}, related_name='prophetcore_document_tags', to='prophetcore.Option', verbose_name='通用标签')),
            ],
            options={
                'verbose_name': '文档资料',
                'verbose_name_plural': '文档资料',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Configure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object id')),
                ('content', models.TextField(blank=True, verbose_name='详细内容')),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to={'app_label': 'prophetcore'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_configure_content_type', to='contenttypes.ContentType', verbose_name='content type')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_configure_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该资源所属的节点', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_configure_onidc', to='prophetcore.Idc', verbose_name='所属节点')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_configure_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
            options={
                'verbose_name': '用户配置',
                'verbose_name_plural': '用户配置',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object id')),
                ('content', models.TextField(blank=True, verbose_name='详细内容')),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to={'app_label': 'prophetcore'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_comment_content_type', to='contenttypes.ContentType', verbose_name='content type')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_comment_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该资源所属的节点', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_comment_onidc', to='prophetcore.Idc', verbose_name='所属节点')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_comment_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
            options={
                'verbose_name': '备注信息',
                'verbose_name_plural': '备注信息',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.NullBooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.NullBooleanField(default=False, editable=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.CharField(max_length=255, verbose_name='file name')),
                ('file', models.FileField(upload_to=prophetcore.models.upload_to, verbose_name='file')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_attachment_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该资源所属的节点', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_attachment_onidc', to='prophetcore.Idc', verbose_name='所属节点')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_attachment_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('tags', models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自节点选项', limit_choices_to={'flag__icontains': 'tags'}, related_name='prophetcore_attachment_tags', to='prophetcore.Option', verbose_name='通用标签')),
            ],
            options={
                'verbose_name': '媒体文件',
                'verbose_name_plural': '媒体文件',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.AddField(
            model_name='user',
            name='onidc',
            field=models.ForeignKey(blank=True, help_text='该资源所属的节点', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prophetcore_user_onidc', to='prophetcore.Idc', verbose_name='所属节点'),
        ),
        migrations.AddField(
            model_name='user',
            name='slaveidc',
            field=models.ManyToManyField(blank=True, related_name='prophetcore_user_slaveidc', to='prophetcore.Idc', verbose_name='附属节点'),
        ),
        migrations.AddField(
            model_name='user',
            name='upper',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prophetcore_user_upper', to=settings.AUTH_USER_MODEL, verbose_name='直属上级'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
